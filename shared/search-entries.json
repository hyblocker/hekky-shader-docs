{"entries":[{"title":"Oops! | Documentation","path":"404","plaintext":"oops uh oh unity seems to have crashed unexpectedly i have no idea whats up with that unity editor crash window anyway let's get back on topic you seem to be lost did you mean hekky pbr"},{"title":"Documentation","path":"en","plaintext":"documentation hi you seem to have stumbled upon root hmmmm i think i can help you go to where you want to go you're looking for the hekky shaders documentation aren't you"},{"title":"Hekky Docs Example","path":"en/playground","plaintext":"full markdown support h1 heading 8 h2 heading h3 heading h4 heading h5 heading h6 heading horizontal rules emphasis this is bold text this is bold text this is italic text this is italic text strikethrough blockquotes blockquotes can also be nested by using additional greater than signs right next to each other or with spaces between arrows lists unordered create a list by starting a line with or sub lists are made by indenting 2 spaces marker character change forces new list start ac tristique libero volutpat at facilisis in pretium nisl aliquet nulla volutpat aliquam velit very easy ordered lorem ipsum dolor sit amet consectetur adipiscing elit integer molestie lorem at massa you can use sequential numbers or keep all the numbers as 1 start numbering with offset foo bar code inline code indented code block code fences sample text here syntax highlighting js var foo function bar return bar console log foo 5 tables | option | description | | | | | data | path to data files to supply the data that will be passed into templates | | engine | engine to be used for processing templates handlebars is the default | | ext | extension to be used for dest files | right aligned columns | option | description | | | | | data | path to data files to supply the data that will be passed into templates | | engine | engine to be used for processing templates handlebars is the default | | ext | extension to be used for dest files | links link text link with title autoconverted link https github com nodeca pica images minion stormtroopocat like links images also have a footnote style syntax alt text with a reference later in the document defining the url location custom controls cards there are five 5 types of cards you can have fucking markdown in these you can have fucking markdown in these you can have fucking markdown in these you can have fucking markdown in these you can have fucking markdown in these reminder you can have full bloody markdown in these things too omg no way"},{"title":"Branding","path":"en/shaders/branding","plaintext":"branding this page contains branding elements used for hekky pbr hekky shaders and individual shaders so that you can promote them if you wish hekky shaders please do not change edit or reconfigure the hekky shaders logo this zipped folder contains all branding material related to hekky shaders hekky pbr please do not change edit or reconfigure the hekky pbr logo this zipped folder contains all branding material related to hekky pbr all branding this zipped folder contains all branding material related to all hekky shaders"},{"title":"Shader Reference","path":"en/shaders/hekky-pbr/reference","plaintext":"shader reference some features require a copy of hekky pbr pro to use these features will have next to them table of contents main lighting toon specular anisotropy outline shader inspector sliders next to textures control the intensity of the texture rendering mode allows you to change the material from opaque mode to transparency mode main this section describes the base layer of a material using hekky pbr texture the albedo diffuse base texture can also be tinted metal mask controls how metallic and reflective the material is other shaders may call this property metal map metallness or something similar roughness map controls how rough the material is invert roughness inverts the roughness map enable this if you want to use smoothness instead of a roughness normal map allows you to define surface bumps without increasing the polygon count lighting this section describes how you may customise how a material reflects light using hekky pbr lighting mode controls the lighting style of the material you can choose between realistic toon and unlit baked specular enables specular lighting from baked light sources such as lightmaps and light probes lighting mode realistic uses a realistic lighting model and aims for photorealism toon toonifies the output of the realistic lighting model to achieve pbr toon shading unlit uses light probes for shading doesn't get affected by any realtime lights toon this section describes how you can tweak the lighting to achieve a cartoon esque look math gradient start controls the start of the math gradient for toon shading should always be smaller or equal to math gradient end math gradient end controls the end of the math gradient for toon shading should always be larger or equal to math gradient start min brightness controls the minimum brightness when using toon shading should always be smaller or equal to max brightness max brightness controls the maximum brightness when using toon shading should always be larger or equal to min brightness specular specular how much to blend between the true color and the tinted specular color on specular highlights specular tint allows you to change the color of specular highlights specular mode allows you to toggle between isotropic normal and anisotropic specular modes baked specular enable specular effects from baked light sources these are not as accurate as realtime ones anisotropy anisotropy map a texture map that stores anisotropy red is anisotropic intensity green is anisotropic angle angle offset allows you to offset the angles from 0Â° outline this section controls outlines enable outline enables outline effects outline width controls the thickness of the outline outline colour controls the outline's colour emission emission controls the object's emissiveness occlusion ambient occlusion controls how much ambient occlusion to apply to the object useful to help improve selfshadowing on non lightmapped materials exposure occlusion controls the effect ambient occlusion has on lightmap ambient occlusion doesn't effect per material ambient occlusion other modules bakery enables bakery support required to use bakery rnm or bakery sh lightmapping modes and must match whatever setting is used in bakery ltcgi enables ltcgi support audiolink enables audiolink support misc render queue controls when to render this material see the unity docs for more information enable gpu instancing allows unity to draw objects using the same mesh and same material using one draw call yielding performance double sided global illumination enables double sided global illumination for this material see the unity docs for more information"},{"title":"Setting up Hekky PBR","path":"en/shaders/hekky-pbr/setup","plaintext":"setting up hekky pbr this is a guide explaining how to setup or update hekky pbr downloading hekky pbr hekky pbr free to download the free tier of hekky pbr you can download the latest version from github or download the latest version from the discord server in free shader downloads hekky pbr pro to download the pro tier of hekky pbr you must be a patron at the 5 eur tier or higher to download the pro tier of hekky pbr join the discord server if you haven't already and navigate to the pro shader downloads channel from there you can download the latest version of hekky pbr pro other hekky shaders to download hekky's other shaders you must be a patron at the 10 eur tier or higher to download hekky's other shaders join the discord server if you haven't already and navigate to the other shaders downloads channel from there you can download the latest versions of hekky's other shader hekky shaders dev to download the unstable development versions of hekky's shaders you must be a patron at the 10 eur tier or higher to download the development builds of hekky's shaders join the discord server if you haven't already and navigate to the dev shaders downloads channel from there you can download the latest development versions of hekky's shaders importing hekky's shaders into unity to import hekky's shaders into unity open a unity project drag the unitypackage into the unity project click the import button on the import dialog upgrading hekky pbr to update your copy of hekky pbr open a unity project unlock all materials you can do this by going to hekky > shaders > unlock all from the menu bar delete the hekky folder from your unity project import the newer version of hekky pbr into your project"},{"title":"What is Hekky PBR?","path":"en/shaders/hekky-pbr/what-is-hekky-pbr","plaintext":"hekky pbr logo what is hekky pbr hekky pbr is a physically based shader for unity with a focus on vrchat it enables it's users to create high fidelity visuals while keeping good performance by default hekky pbr supports numerous features | feature | hekky pbr free | hekky pbr pro | | | | | | physically based rendering | | | | packed textures | | | | matcaps | | | | anisotropy | | | | toon shading | | | | outlines | | | | bakery support | | | | ltcgi support | | | | audiolink support | | |"},{"title":"Creating PBR Textures","path":"en/shaders/understanding-pbr/creating-pbr-textures","plaintext":"creating pbr textures creating pbr textures is a complex subject and this guide cannot explain everything this page will only give a surface level basic understanding of authoring textures using a pbr workflow using existing pbr materials creating your own pbr materials from scratch is difficult time consuming and expensive thus there are a wide variety of freely available pbr textures you can use ambient cg formerly cc0 textures cgbookcase com 3d textures by icons8 requires attribution i e say that you got the textures from icons8 if using the free license paid license doesn't demand attribution sometimes you'll find pbr textures offered in a sbsar file format you can open these files in substance player and further tweak them to generate unique pbr textures this route is preferred whenever possible over using random pbr textures as due to these textures being freely available users might feel that they are repetitive"},{"title":"What is PBR?","path":"en/shaders/understanding-pbr/what-is-pbr","plaintext":"what is pbr this explanation is not a technical one it is designed to familiarise you with the core concepts of pbr as understanding them well is important if you want to make or use good textures this explanation will focus the concepts implemented inside of hekky pbr but these should be exchangeable for other shaders too physically based rendering pbr refers to the practise of using realistic i e based on real life physics shading and lighting algorithms to achieve the most photorealistic result possible in 3d rendering while pbr is designed to mimic realistic shading and lighting it does not mean that it can't be stylized pbr is not standardised each application shader and renderer have their own implementation of it luckily the implementations are similar enough to be able to transfer pbr textures from one shader to another core concepts reflections in the real world light rays get reflected off a surface and bounce around the scene the way light gets reflected can be represented in one of two ways based on how rough a surface is specular reflections refer to light rays which are reflected in the exact same angle they arrived in this is basically a mirror and what you normally think of as a reflection todo specular reflection diagram metal 1 rough 0 diffuse reflections refer to light rays which are reflected randomly todo diffuse reflection diagram metal 0 rough 1 albedo red diffuse reflections aren't really reflected in reality the light is absorbed by the material then scattered about we can control if a surface uses specular reflections or diffuse reflections with the metal mask parameter a surface cannot be half metallic and half dielectric dielectric is the opposite of metal you might see metal mask referred to as metalness metallic or metal in other shaders these refer to the same property we can control the reflectivity of a surface via the roughness parameter the rougher a surface is the blurrier the reflections appear the smoother a surface is the smoother the reflections appear smoothness or glossiness is the inverse of roughness todo roughness diagram metal 1 rough user controlled occlusion occlusion refers to the lack of light reaching a surface it's used to tell the shader which parts of the model should be darker than others emission some surfaces such as small leds emit light but are too small to be an entire light source an emissive map is used to allow such surfaces to cast light light scattering certain surfaces scatter light this means that the light goes through them this can be seen in subsurface scattering and sheen subsurface scattering refers to when light goes through a solid surface and spreads around it before coming out from the other side you might have noticed it when you put your hand in front of a light and your hand glowed an orange red colour this behavior is called subsurface scattering and can be seen on numerous surfaces such as candles curtains and skin todo real life image of subsurface scattering replace with render when hekky pbr suppports it sheen refers to a special type of light behavior typically exhibited by cloths without sheen cloth will most likely look plastic like this is because in real life at grazing angles cloth generally scatters more light than traditional materials todo sheen image with before after refraction in real life transparent and translucent surfaces refract light this is most prominent on common surfaces like glass plastic and lenses refraction is an expensive graphical effect and can negatively affect your framerate use it only if you really need to using refraction for glass for example will negatively affect your performance todo lens glass anisotropy anisotropy refers to stretched specular reflections it's typically seen at angles around a point on a surface too brushed materials are common anisotropic materials anisotropy example"},{"title":"Who Asked","path":"en/shaders/who-asked","plaintext":"who asked who asked is a simple radar shader with audiolink functionality because it's funnyâ¢ table of contents rings radar audiolink misc shader inspector rings rings number of rings to render ring color color of the rings ring thickness thickness of each ring ring emission how emissive the ring should be radar rings number of rings to render ring color color of the rings ring thickness thickness of each ring ring emission how emissive the ring should be audiolink rings number of rings to render ring color color of the rings ring thickness thickness of each ring ring emission how emissive the ring should be misc rings number of rings to render ring color color of the rings ring thickness thickness of each ring ring emission how emissive the ring should be"}]}