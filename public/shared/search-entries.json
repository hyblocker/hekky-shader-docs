{"entries":[{"title":"Hekky Atmosphere Reference","path":"en/shaders/hekky-atmosphere/reference","plaintext":"shader reference table of contents atmosphere night sky sun moon stars shader inspector sliders next to textures control the intensity of the texture atmosphere intensity controls the intensity of the day sky effectively a brightness slider color the colour of the atmosphere when the sun is up ground the colour of the ground plane mie scattering intensity the intensity of the mie scattering the halo around the sun fixed altitude when enabled the camera's altitude is ignored altitude controls the altitude of the camera useful when you want to take a player somewhere which is high up but don't want to deal with floating point precision issues there is a smooth transition from low to high altitude night sky night intensity the luminosity of the night sky effectively controls how bright the night sky is night color the colour of the night sky light pollution how much light pollution is in the scene currently light pollution intensity the luminosity of light due to light pollution effectively controls how far it leaks into the atmosphere from the ground light pollution color the colour of the lighting that's visible in the atmosphere due to light pollution light pollution example light pollution sun override color overrides the sun's colour color the colour of the sun as seen from space this colour then gets filtered through the atmosphere by the time it reaches the player's eyes this filtering lets you have red sunsets intensity controls the luminosity of the sun effectively controls how bright the sun is size the size of the sun in the atmosphere moon direction the direction of the moon you most likely shouldn't touch this and use the atmosphere system instead as it better handles this size the size of the moon in the sky intensity the luminous intensity of the moon effectively controls how bright the moon is albedo a cubemap of the moon's surface there's a reason it's a cubemap and not a 2d texture which will be revealed soonâ„¢ stars mode the current star rendering mode can select between procedural and hdri hdri is recommended threshold allows you to change the material from opaque mode to transparency mode color shift allows you to change the material from opaque mode to transparency mode cubemap the cubemap which shows stars for the best results make sure this cubemap doesn't contain the sun and moon intensity allows you to change the material from opaque mode to transparency mode"},{"title":"Setting up Hekky Atmosphere","path":"en/shaders/hekky-atmosphere/set-up","plaintext":"setting up hekky atmosphere the instructions below assume that you have imported a build of hekky shaders which include hekky atmosphere first setting up hekky atmosphere in a new scene to set up hekky atmosphere in a new scene create a new skybox material then change it's shader to hekky atmosphere drag the material into the scene window to apply it find you sun light usually called directional light in a new scene and add a new atmosphere system component to it this component is necessary as it performs some calculations which don't make sense to compute in the shader create a new empty game object and drag it into the moon slot in the atmosphere system this game object will control the moon's direction a sample scene is included in hekky examples scenes atmosphereexample controlling the sky after setting up the atmosphere system controlling the sky is relatively easy to control the sun rotate the directional light the same way you would control the sun using the default unity skybox to control the moon rotate the moon game object you've created and it will behave similarly to the sun only it instead controls the moon you can then play with the parameters in the material common issues the colors look off the sun doesn't glow hekky atmosphere is designed to work with post processing in mind therefore it is recommended to import and use post processing in scenes with hekky atmosphere i can't create the look i want if hekky atmosphere doesn't suit your needs or you're encountering difficulties while trying to set it up please ask for help on the discord server"},{"title":"What is Hekky Atmosphere?","path":"en/shaders/hekky-atmosphere/what-is-hekky-atmosphere","plaintext":"what is hekky atmosphere hekky atmosphere is a procedural skybox shader which is designed to replace the default unity skybox it allows for significantly higher fidelity skies with minimal effort for a complete list of features please view the shader reference comparisons below is a list of images comparing hekky atmosphere with the default unity skybox both images were captured with the same sun direction and camera direction to better show the difference features hekky atmosphere contains a number of features most of which aren't available in the default unity skybox | feature | hekky atmosphere | unity skybox | | | | | | rayleigh mie scattering | | | | colour accurate rayleigh mie scattering | | | | sun darkening visible during sunset | | | | moon | | | | stars | | | | light pollution | | | | exiting the atmosphere | | | | artist controllable colours | | | more features for hekky atmosphere are planned and will be revealed when they're ready"},{"title":"Hekky Display Reference","path":"en/shaders/hekky-display/reference","plaintext":"shader reference shader inspector sliders next to textures control the intensity of the texture rendering mode allows you to change the material from opaque mode to transparency mode display all textures share sampling settings the texture sampling settings the only exceptions are the subpixel layout matcap textures this section describes the behavior of a display expressed by a material using hekky display display texture the albedo diffuse base texture can also be tinted generally this would be a rendertexture from a videoplayer aspect ratio the aspect ratio of the display defaults to 16 9 used to ensure that videos maintain aspect ratio to disable it set the value to 1 to use a custom aspect ratio replace the with a divide operator for example using 4 3 sets the aspect ratio to 4 3 subpixel layout a subpixel layout texture example textures are provided in assets hekky textures subpixellayouts this texture is an rgb texture which gets multiplied with a pixel from the video texture subpixel scale x y scales the subpixel texture along the x and y axes 1 means no scaling subpixel resolution the physical resolution of the display to emulate a 1080p display for example set the resolution to 1920 by 1080 snap to subpixels snaps the display texture to the subpixel grid which would remove gradients in subpixels emulating lcds better overscan x y adds an unlit black border around the display useful for crts this section doesn't get affected by the backlight backlight adds a backlight to the display to emulate an lcd better grayscale turns the image grayscale useful if you're trying to aim for a vintage look flip in mirrors flips the screen when viewed through a mirror useful so that text remains readable flip on backside flips the screen when viewed through the backface of a mesh useful so that text remains readable strobing strobing refers to the behavior exhibited primarily by crts when attempted to be recorded with incorrect shutter speed settings on a camera this effect isn't present to the naked eye strobe in cameras enables strobing in vrchat cameras size controls the size of the strobing effect period controls the duration of the strobing effect speed controls the speed of the strobing effect minimum light the minimum light from dark areas under the strobing effect strobe start strobe end these control the start and end of the strobing effect the strobe gets remapped such that the start is mapped to 0 and the end is mapped to 1"},{"title":"What is Hekky Display?","path":"en/shaders/hekky-display/what-is-hekky-display","plaintext":"what is hekky display hekky display is a variant of hekky pbr designed for use specifically with displays this shader allows displays such as tvs and monitors to render subpixels force the video texture to fit within a specific aspect ratio and offers a number of features for video players in vrchat subpixel rendering of a display using hekky display crt strobing effect which is visible only in the camera on the right hekky display supports numerous features physically based lighting see hekky pbr for more info flipping the video texture in mirrors and on the back face to maintain readability force fitting aspect ratio led backlighting subpixel rendering with customisable sub pixel layouts overscanning crt strobing in cameras"},{"title":"Hekky PBR Reference","path":"en/shaders/hekky-pbr/reference","plaintext":"shader reference some features require a copy of hekky pbr pro to use these features will have next to them table of contents main lighting toon specular anisotropy emission matcap occlusion outline audiolink other modules ltcgi settings misc shader inspector sliders next to textures control the intensity of the texture rendering mode allows you to change the material from opaque mode to transparency mode alpha clip allows you to control the alpha clip threshold main this section describes the base layer of a material using hekky pbr texture the albedo diffuse base texture can also be tinted metal mask controls how metallic and reflective the material is other shaders may call this property metal map metallness or something similar roughness map controls how rough the material is invert roughness inverts the roughness map enable this if you want to use smoothness instead of roughness normal map allows you to define surface bumps without increasing the polygon count all textures share sampling settings the texture sampling settings the only exception is the matcap texture lighting this section describes how you may customise how a material reflects light using hekky pbr lighting mode controls the lighting style of the material you can choose between realistic toon and unlit baked specular enables specular lighting from baked light sources such as lightmaps and light probes lighting mode realistic uses a realistic lighting model and aims for photorealism toon toonifies the output of the realistic lighting model to achieve pbr toon shading unlit uses light probes for shading doesn't get affected by any realtime lights toon this section describes how you can tweak the lighting to achieve a cartoon esque look math gradient start controls the start of the math gradient for toon shading should always be smaller or equal to math gradient end math gradient end controls the end of the math gradient for toon shading should always be larger or equal to math gradient start min brightness controls the minimum brightness when using toon shading should always be smaller or equal to max brightness max brightness controls the maximum brightness when using toon shading should always be larger or equal to min brightness receive shadows disables shadows on this material normal reprojection recalculates normals using a spherical mapping assuming the mesh's origin as the center of the sphere this is mainly intended for cartoony faces base normal blend how much to blend between the model's normals and the reprojected normals specular specular how much to blend between the true color and the tinted specular color on specular highlights specular tint allows you to change the color of specular highlights specular mode allows you to toggle between isotropic normal and anisotropic specular modes baked specular enable specular effects from baked light sources these are not as accurate as realtime ones if not using directional or bakery lightmapping modes anisotropy anisotropy map a texture map that stores anisotropy red is anisotropic intensity green is anisotropic angle angle offset allows you to offset the angles from 0Â° reflections force reflections mode forces reflections to be interpreted as either box projected or spherical projected reflection probes emission emission controls the object's emissiveness intensity how bright to make the emission matcap enable matcap enables matcaps shading texture the matcap texture mask a mask texture all channels other than red are ignored border how much to offset the bounds matcap from the edge of the texture replace add difference multiply overlay different blend modes value controls their strength reflection blend how much to blend the matcap with cubemap reflections occlusion ambient occlusion controls how much ambient occlusion to apply to the object useful to help improve selfshadowing on non lightmapped materials exposure occlusion controls the effect ambient occlusion has on lightmap ambient occlusion doesn't effect per material ambient occlusion outline this section controls outlines enable outline enables outline effects outline width controls the thickness of the outline outline color controls the outline's color audiolink this section explains the various audiolink related controls hekky pbr offers enable debug mode enables audiolink debug mode which allows you to manually input parameters for audiolink to ensure that it's functioning properly make sure that this is disabled in before uploading vrchat bass low mid high mid treble controls the individual audiolink channels audiolink emission multiply multiplies the emission strength with the specified audiolink channel use the min max sliders to adjust how intense you want the audio reactivity to be add adds the specified audiolink channel to the emission strength use the min max sliders to adjust how intense you want the audio reactivity to be other modules bakery enables bakery support required to use bakery rnm bakery sh or monosh lightmapping modes and must match whatever setting is used in bakery learn more ltcgi enables ltcgi support audiolink enables audiolink support ltcgi settings ltcgi scale skews the area of effect of an ltcgi light in 3d this can be used to give the illusion of a surface receiving more light ltcgi intensity controls the brightness of ltcgi lighting misc render queue controls when to render this material see the unity docs for more information enable gpu instancing allows unity to draw objects using the same mesh and same material using one draw call yielding performance double sided global illumination enables double sided global illumination for this material see the unity docs for more information"},{"title":"Setting up Hekky PBR","path":"en/shaders/hekky-pbr/setup","plaintext":"setting up hekky pbr this is a guide explaining how to setup or update hekky pbr downloading hekky pbr hekky pbr free to download the free tier of hekky pbr you can download the latest version from github or download the latest version from the discord server in free shader downloads hekky pbr pro to download the pro tier of hekky pbr you must be a patron at the 5 eur tier or higher to download the pro tier of hekky pbr join the discord server if you haven't already and navigate to the pro shader downloads channel from there you can download the latest version of hekky pbr pro other hekky shaders to download hekky's other shaders you must be a patron at the 10 eur tier or higher to download hekky's other shaders join the discord server if you haven't already and navigate to the other shaders downloads channel from there you can download the latest versions of hekky's other shader hekky shaders dev to download the unstable development versions of hekky's shaders you must be a patron at the 10 eur tier or higher to download the development builds of hekky's shaders join the discord server if you haven't already and navigate to the dev shaders downloads channel from there you can download the latest development versions of hekky's shaders importing hekky's shaders into unity to import hekky's shaders into unity open a unity project drag the unitypackage into the unity project click the import button on the import dialog upgrading hekky pbr to update your copy of hekky pbr open a unity project unlock all materials you can do this by going to hekky > shaders > unlock all from the menu bar delete the hekky folder from your unity project import the newer version of hekky pbr into your project"},{"title":"Using With VRChat","path":"en/shaders/hekky-pbr/using-with-vrchat","plaintext":"using with vrchat hekky pbr is designed with vrchat in mind and has vrchat specific integrations as a result unity 2019 4 31f1 has a maximum global shader keyword limit of 384 keywords when you exceed the global keyword limit other shaders will start to break local keywords allow us to make use of keywords without affecting the global keyword limit which means other shaders won't break hekky pbr makes use of local shader keywords as a result of this but the vrchat avatar sdk has a bug which prompts you to remove local shader keywords please do not do this as your materials will break if you would like to see this bug get resolved go upvote this canny ltcgi linearly transformed cosine global illumination ltcgi is a plug and play real time lighting solution which allows video players to emit light onto surfaces hekky pbr supports ltcgi allowing materials which use it to receive light from video players to set it up enable ltcgi in the other modules category setting up ltcgi itself is beyond the scope of this section please read the instructions on github for more information audiolink audiolink is a vrchat addon which allows materials to react to music hekky pbr offers currently basic audiolink support for materials with plans for more advanced functionality down the road to set up audiolink enable audiolink in the other modules category you can then configure audiolink in the emission category and test it using the audiolink debug section setting up audiolink itself is beyond the scope of this section please read the instructions on github for more information"},{"title":"What is Hekky PBR?","path":"en/shaders/hekky-pbr/what-is-hekky-pbr","plaintext":"hekky pbr logo what is hekky pbr hekky pbr is a physically based shader for unity with a focus on vrchat it enables it's users to create high fidelity visuals while keeping good performance by default hekky pbr supports numerous features | feature | hekky pbr free | hekky pbr pro | | | | | | physically based rendering | | | | packed textures | | | | matcaps | | | | anisotropy | | | | toon shading | | | | outlines | | | | bakery support | | | | ltcgi support | | | | audiolink support | | | | numerous editor extensions | | |"},{"title":"Hekky Shaders","path":"en/shaders","plaintext":"hekky shaders hekky shaders are a collection of shaders designed primarily for world creation below are a few links to get you started learn about what pbr rendering is learn about what hekky's pbr shaders have to offer a skybox designed to replace the default unity skybox a shader designed to mimic the look and feel of displays yes this is a shader your eyes aren't deceiving you learn about the editor extensions that get bundled with hekky's shaders"},{"title":"Editor Extensions","path":"en/shaders/misc/bakery","plaintext":"bakery bakery is a paid gpu lightmapper for unity you can buy a copy of bakery here and buy a copy of bakery rt preview here bakery requires a nvidia gpu preferably an rtx gpu bakery will not work on intel or amd gpus please see the bakery wiki for more information table of contents why use bakery directional modes how do i get good results using bakery why use bakery bakery takes advantage of the gpu to offer fast light baking bakery's lightmapper is more often than not noticeably faster than unity's built in gpu lightmapper and also supports more accurate lighting apart from that bakery allows you to use more complex lightmap directional modes than unity's progressive lightmapper which more accurately store the way light bounces around a scene which results in better lighting directional modes what's the difference between none baked normal maps dominant direction rnm sh and monosh | name | description | vram relative | | | | | | none | stores the light colour but no information regarding the way the light changes based on where you look at it from looks the worst | 2 | | baked normal maps | ground truth takes normal maps into account but doesn't store any directionality information about them | 2 | | dominant direction | stores the light color and dominant direction of the light despite having some form of directionality it's not as accurate as rnm sh and monosh | 4 | | rnm | most memory demanding of them all based on the radiosity normal mapping technique popularised in hl2 requires udonbakeryadapter | 6 | | sh | stores the light colour and lighting information in all directions this yields the best results requires udonbakeryadapter | 5 | | monosh | stores the same information as sh but in a more efficient manner | 4 | numbers above assume the lightmap textures are using the same resolution and are per lightmap dominant direction is the most commonly used directional mode in vrchat few maps use rnm or sh due to their memory footprints monosh while relatively new offers the same visual quality of sh at the same memory footprint as dominant direction how do i get good results using bakery lighting a scene well is a topic that is beyond the scope of this page there are plenty of other resources on the internet if you wish to learn how to light a scene effectively it's important to keep a balance between lightmap quality and the memory footprint of lightmaps this is why most vrchat world creators use dominant direction monosh which uses the same memory footprint as dominant direction offers the best visual quality for a fraction of the memory footprint of full sh monosh also has the benefit of not requiring udonbakeryadapter monosh l1 lightmaps suffer heavily from compression artifacts and as such i recommend using the bc7 texture format high quality compression for better results these screenshots are real and have not been altered"},{"title":"Branding","path":"en/shaders/misc/branding","plaintext":"branding this page contains branding elements used for hekky pbr hekky shaders and individual shaders so that you can promote them if you wish hekky shaders please do not change edit or reconfigure the hekky shaders logo this zipped folder contains all branding material related to hekky shaders hekky pbr please do not change edit or reconfigure the hekky pbr logo this zipped folder contains all branding material related to hekky pbr all branding this zipped folder contains all branding material related to all hekky shaders"},{"title":"Editor Extensions","path":"en/shaders/misc/editor-extensions","plaintext":"editor extensions hekky pbr comes with a couple of editor extensions to make the process of world creation easier table of contents post processing setup studio lighting mode normal map conversion tool auto high quality monosh l1 lightmaps post processing setup hekky > setup post processing a quick and easy tool to help you setup post processing in your unity project and scene with sane default values studio lighting mode press f12 you can go to edit > shortcuts to edit keybinds this allows you to mimic the studio lighting mode seen in blender inside the unity scene view this is particularly useful for navigating dark scenes such as nightclubs studio lighting it has been reported that when using this mode some materials disappear entirely from the scene view or don't render properly in the scene view if this happens to you please contact me so that i can fix this for better behaviour normal map conversion tool right click a normal map texture then select convert > normal map gl ðŸ¡¸ðŸ¡º dx allows you to convert a normal map from opengl mode to directx mode and vice versa equivalent of inverting the green channel in an image editor auto high quality monosh l1 lightmaps bakery recently added support for monosh lightmaps the default configuration for monosh lightmaps unfortunately suffer from lots of artifacts as you can see above hekky shaders come with a solution which forces a better compression format bc7 which handles gradients significantly better than the default option bc7 however results in larger texture sizes whenever you bake a scene using bakery with monosh directional mode you'll see this pop up monosh popup clicking yes use bc7 will always force l1 lightmaps to use the bc7 texture format this pop up will not re open again once set if you wish to change this behaviour you can change the settings by navigating to editor hekkysettings and changing the bakery force mono sh high quality setting hekky settings bakery force monosh"},{"title":"Creating PBR Textures","path":"en/shaders/understanding-pbr/creating-pbr-textures","plaintext":"creating pbr textures creating pbr textures is a complex subject and this guide cannot explain everything this page will only give a surface level basic understanding of authoring textures using a pbr workflow using existing pbr materials creating your own pbr materials from scratch is difficult time consuming and expensive thus there are a wide variety of freely available pbr textures you can use ambient cg formerly cc0 textures cgbookcase com share textures 3d textures by icons8 requires attribution i e say that you got the textures from icons8 if using the free license paid license doesn't demand attribution uses direct x style normal maps see normal map conversion for more information sometimes you'll find pbr textures offered in a sbsar file format you can open these files in substance player and further tweak them to generate unique pbr textures this route is preferred whenever possible over using random pbr textures as due to these textures being freely available users might feel that they are repetitive creating pbr textures from scratch there are numerous methods and tools which can be used to create pbr textures pbr textures are best created using either photogrammetry or tools designed with pbr texturing in mind tools you can use substance suite blender which texture maps should you use good pbr materials generally make use of a couple of texture maps base color diffuse albedo normal map metallic map roughness map ambient occlusion map a material that doesn't make use of one or more of the above texture maps isn't a bad material in real life nothing is perfect even if it's brand new therefore if you're trying to create convincingly realistic materials add damage for example if you're texturing a gas canister which has been left in a garden for a good while add dirt and maybe even moss"},{"title":"What is PBR?","path":"en/shaders/understanding-pbr/what-is-pbr","plaintext":"what is pbr this explanation is not a technical one it is designed to familiarise you with the core concepts of pbr as understanding them well is important if you want to make or use good textures this explanation will focus the concepts implemented inside of hekky pbr but these should be exchangeable for other shaders too physically based rendering pbr refers to the practise of using realistic i e based on real life physics shading and lighting algorithms to achieve the most photorealistic result possible in 3d rendering while pbr is designed to mimic realistic shading and lighting it does not mean that it can't be stylized pbr is not standardised each application shader and renderer have their own implementation of it luckily the implementations are similar enough to be able to transfer pbr textures from one shader to another core concepts reflections in the real world light rays get reflected off a surface and bounce around the scene the way light gets reflected can be represented in one of two ways based on how rough a surface is specular reflections refer to light rays which are reflected in the exact same angle they arrived in this is basically a mirror and what you normally think of as a reflection specular reflection example demonstrating a highly reflective surface diffuse reflections refer to light rays which are reflected randomly diffuse reflections aren't really reflected in reality the light is absorbed i e the light goes inside the material by the material then scattered about some of the light gets absorbed by the material itself meaning that the light color can changed based on the material this is why we perceive orange painted plastic as orange instead of white for example specular reflection example demonstrating a red and rough surface we can control if a surface uses specular reflections or diffuse reflections with the metal mask parameter a surface cannot be half metallic and half dielectric a dielectric surface is the opposite of a metallic surface you might see metal mask referred to as metalness metallic or metal in other shaders these refer to the same property we can control the reflectivity of a surface via the roughness parameter the rougher a surface is the blurrier the reflections appear the smoother a surface is the smoother the reflections appear smoothness or glossiness is the inverse of roughness energy conservation one of the key principles of pbr rendering in comparision to other rendering methods is the principle of energy conservation this means that a surface never reflects more light than it receives the only exception to this is when a surface is said to be emissive occlusion occlusion refers to the lack of light reaching a surface it's used to tell the shader which parts of the model should be darker than others emission some surfaces such as small leds emit light but are too small to be an entire light source an emissive map is used to allow such surfaces to cast light anisotropy anisotropy refers to stretched specular reflections it's typically seen at angles around a point on a surface too brushed materials are common anisotropic materials anisotropy example"},{"title":"Who Asked","path":"en/shaders/who-asked","plaintext":"who asked who asked is a simple radar shader with audiolink functionality because it's funnyâ„¢ table of contents rings radar audiolink misc shader inspector rings rings number of rings to render ring color color of the rings ring thickness thickness of each ring ring emission how emissive the ring should be radar radar color the color of the radar radar width the width of the radar radar alpha the transparency of the radar radar fade from edge controls the fade threshold from the edge of the radar radar fade intensity controls how gradual the fade on the radar is radar emission how emissive the radar should be audiolink radar audiolink enables audiolink radar band the audio channel to react to radar emission the maximum emission when using audiolink ring phase offset angle the maximum additional angle the phase offset should use misc turn speed how fast the radar will spin fallback texture a fallback texture which is used in the event that the shader fails to load and resorts to a fallback shader render queue controls when to render this material see the unity docs for more information double sided global illumination enables double sided global illumination for this material see the unity docs for more information"}]}